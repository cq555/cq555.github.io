<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>express</title>
    <url>/2020/09/29/express/</url>
    <content><![CDATA[<h3 id="可以使服务器跨域"><a href="#可以使服务器跨域" class="headerlink" title="可以使服务器跨域"></a>可以使服务器跨域</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app.all(&quot;*&quot;,function(req,res,next)&#123;</span><br><span class="line">	&#x2F;&#x2F;设置允许跨域的域名，*代表允许任意域名跨域</span><br><span class="line">	res.header(&quot;Access-Control-Allow-Origin&quot;,req.headers.origin||&#39;*&#39;);</span><br><span class="line">	&#x2F;&#x2F;允许的header类型</span><br><span class="line">	res.header(&quot;Access-Control-Allow-Headers&quot;,&quot;Content-Type,Authorization,X-Requested-With&quot;);</span><br><span class="line">	&#x2F;&#x2F;	&#x2F;&#x2F;跨域允许的请求方式</span><br><span class="line">	res.header(&quot;Access-Control-Allow-Methods&quot;,&quot;PUT,POST,GET,DELETE,OPTIONS&quot;);</span><br><span class="line">	&#x2F;&#x2F;	可以带cookies</span><br><span class="line">	res.header(&quot;Access-Control-Allow-Credentials&quot;,true);</span><br><span class="line">	if(req.method&#x3D;&#x3D;&#39;OPTIONS&#39;)&#123;</span><br><span class="line">	res.sendStatus(200);</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">	next();</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>VUE知识点</title>
    <url>/2020/09/28/vueapp/</url>
    <content><![CDATA[<h3 id="1、VUE中几个单词的作用"><a href="#1、VUE中几个单词的作用" class="headerlink" title="1、VUE中几个单词的作用"></a>1、VUE中几个单词的作用</h3><p>（1）methods:{} 里面写的是方法  调用的时候直接就触发<br>（2）computed:{} 计算属性  里写的是监听某个值改变了然后改变了页面  只有监听的值改变了才触发<br>（3）components:{} 里写的是创建的组件的名字<br>（4）prpos:父组件传给子组件时用的属性</p>
<h3 id="2、生命周期"><a href="#2、生命周期" class="headerlink" title="2、生命周期"></a>2、生命周期</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">beforeCreate</span></span>()&#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件创建之前&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line">使用最多的一个钩子函数，用来获取数据</span><br><span class="line"><span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件创建完成&#x27;</span>);</span><br><span class="line">这里用来引用插件</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">beforeMount</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件挂载之前，把html节点内容进行解析&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mounted</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件挂载完成，把html节点内容解析完成，此处可以获取组件的dom元素&#x27;</span>);</span><br><span class="line"><span class="variable">$el</span>  可以获取当前组件中的dom元</span><br><span class="line"> console.log(this.<span class="variable">$el</span>.style.color = <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"> 更新的两个函数会重复执行，更新的时候不能改变数据，不然会出现死循环</span><br><span class="line"><span class="function"><span class="title">beforeUpdate</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件更新之前， 当前属性和data数据发生改变的时候进行&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">updated</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件更新完成&#x27;</span>);</span><br><span class="line">// this.num++  死循环</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">beforeDestroy</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件销毁之前&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">destroyed</span></span>() &#123;</span><br><span class="line">console.log(<span class="string">&#x27;组件销毁完成&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>①父传子 （使用属性）<br>   从外往内传，使用props属性<br>   在子元素中建一个props<br>②子传父（使用事件派发）<br>   $on    vue中的事件监听<br>   $emit   vue中的事件派发<br>③组件与组件之间传参<br>新建一个  const $eventBus = new Vue();<br>this.$eventBus.$emit(“coolectMovies”, c);  派发<br> this.$eventBus.$on(“coolectMovies”,c)     接收</p>
<h3 id="3、基础"><a href="#3、基础" class="headerlink" title="3、基础"></a>3、基础</h3><p>*请求加载图片</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;meta name=<span class="string">&quot;referrer&quot;</span> content=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>
<p>  请求资源时不把我的当前的主机信息传递给服务器<br>vue是一个前端渐进式的mvvm开发框架。<br>mvvm是一种开发模式，分为三块内容:model view view-model<br>model是用来存储数据的<br>view是用来展示数据的<br>view-model是视图模型层，用来对数据和视图进行双向绑定的<br>（1）v-model（可以加修饰符）<br>作用是把data中的数据和html页面中的form表单项做关联<br>v-model.trim  去空格<br>（2）事件绑定使用@或者v-on<br>@keyup=“事件名或操作” 键盘按下事件（keyCode来判断按得是哪个）<br>@clicck=“事件名或操作”<br>按键修饰符<br>@keyup.enter表示按下回车<br>@keyup.ctrl.enter表示ctrl+回车<br>@keyup.alt.enter表示alt+回车<br>（3）v-for<br>循环每一项在页面中进行显示。可以循环数组，字符串，数字，对象<br>v-for=”item in people” :key=””<br>“ : ”v-bind的简写  绑定数据,每一个循环项目都需要一个唯一的key，作用是性能优化<br>（4）v-if/v-show<br>控制标签的显示和隐藏<br>v-show指令接收一个bool值true/false<br>v-if  是直接删除标签，不在页面中心事了（可以直接销毁组件）<br>v-show 是控制标签的display属性进行显示和隐藏<br>相对来说 v-show 的性能更高一些<br>（5）methods<br>在vue实例中可以访问到的自定义方法都写在这个属性中<br>methods中的方法可以相互调用，也能直接访问data中的数据，需要加上this关键字<br>（6）v-html  绑定一个富文本标签  （富文本编辑器：wangEditor,ueditor,kindeditor）<br>富文本    包含有html标签的字符串文本内容<br>管理后台 ？   是对所有系统中的数据做管理<br>服务器端开发？ java、php、c#、python、ruby、nodejs等<br>调用服务器的一些资源，操作数据库存取数据，写接口，写页面<br>管理后台又叫管理系统，是一个web系统或者一个桌面系统<br>是由开发人员制作的，服务器端开发知识管理后台中的一部分而已<br>还需要前端<br>管理后台可以对系统的数据和用户会员信息做管理，管理后台是个企业内部使用的<br>（7）watch<br>监听一个数据的改变，触发一些列的操作。一个影响多个<br>（8）computed<br>多个影响一个</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/09/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo</span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting</span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub</span>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing</span></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server</span></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating</span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment</span></p>
]]></content>
  </entry>
</search>
